version: '3.8'

services:
  nextjs:
    image: prisma-editor:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
        NEXTAUTH_URL: ${NEXTAUTH_URL}
        GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
        GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
        OPEN_AI_API_KEY: ${OPEN_AI_API_KEY}
      environment:
        - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/postgres
        - NEXTAUTH_URL=${NEXTAUTH_URL}
        - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
        - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
        - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
        - OPEN_AI_API_KEY=${OPEN_AI_API_KEY}
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - /mnt/HC_Volume_102507541/postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge 